# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  nixcfgs,
  pkgs,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  # Use the systemd-boot EFI boot loader.
  # boot.loader.systemd-boot.enable = true;
  boot = {
    extraModulePackages = [];
    initrd = {
      availableKernelModules = ["nvme" "xhci_pci" "thunderbolt" "usbhid" "usb_storage" "sd_mod"];
      kernelModules = [];
      luks.devices."enc".device = "/dev/disk/by-uuid/0f683176-f3b5-43cb-9288-dc2d314a18ad";
    };
    kernelModules = ["kvm-amd"];
    kernelPackages = pkgs.linuxPackages_latest;
    loader = {
      grub = {
        enable = true;
        devices = ["nodev"];
        efiSupport = true;
        useOSProber = true;
      };
      efi.canTouchEfiVariables = true;
    };
  };

  fileSystems = let
    mkBtrfs = subvol: {
      device = "/dev/disk/by-uuid/ea17de4e-4178-46e1-b6c9-504d5688f539";
      fsType = "btrfs";
      options = ["subvol=${subvol}" "compress=zstd" "noatime"];
    };

    neededForBoot = {neededForBoot = true;};
  in
    with nixcfgs; {
      "/boot" = {
        device = "/dev/disk/by-uuid/A5D6-EBF3";
        fsType = "vfat";
        options = ["fmask=0077" "dmask=0077"];
      };

      "/" = mkBtrfs "root";
      "/home" = mkBtrfs "home";
      "/nix" = mkBtrfs "nix";
      ${persist} = (mkBtrfs persistVol) // neededForBoot;
      "/var/log" = (mkBtrfs "log") // neededForBoot;

      "/mnt/data" = {
        device = "/dev/disk/by-uuid/78C68019C67FD63A";
        fsType = "ntfs";
        options = [
          "rw"
          "uid=1000"
          "gid=100"
          "dmask=0022"
          "fmask=0133"
          "windows_names"
        ];
      };
    };

  swapDevices = [
    {device = "/dev/disk/by-uuid/46dcb03a-f311-44c5-984c-c73136c1679a";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
